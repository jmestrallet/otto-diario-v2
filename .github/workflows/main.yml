name: X scheduler

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

permissions:
  contents: write
  actions: write

concurrency:
  group: otto-diario-scheduler
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run scheduler
        env:
          X_CLIENT_ID: ${{ secrets.X_CLIENT_ID }}
          # Variable primero; si no existe, cae al Secret
          REFRESH_TOKEN_ACC1: ${{ vars.REFRESH_TOKEN_ACC1 || secrets.REFRESH_TOKEN_ACC1 }}
          REFRESH_TOKEN_ACC2: ${{ vars.REFRESH_TOKEN_ACC2 || secrets.REFRESH_TOKEN_ACC2 }}
          REFRESH_TOKEN_ACC3: ${{ vars.REFRESH_TOKEN_ACC3 || secrets.REFRESH_TOKEN_ACC3 }}
          ACCOUNTS_JSON: ${{ vars.ACCOUNTS_JSON }}
          CSV_FILE: ${{ vars.CSV_FILE }}
          STATE_FILE: ${{ vars.STATE_FILE }}
          WINDOW_MIN: ${{ vars.WINDOW_MIN }}
        run: |
          python post_scheduler.py

      - name: Subir artefacto con tokens rotados (backup)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: new-refresh-tokens
          path: .tokens_out.json
          if-no-files-found: ignore
          retention-days: 1

      - name: Commit posted.csv (persist state)
        if: always()
        run: |
          if [ -f "posted.csv" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git fetch origin
            git checkout $GITHUB_REF_NAME || true
            git pull --rebase origin $GITHUB_REF_NAME || true
            git add posted.csv
            git commit -m "chore: update posted.csv [skip ci]" || echo "No changes"
            git push || echo "No push needed"
          fi

      - name: Propagar refresh tokens rotativos a Variables
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_VAR_TOKEN }}
          script: |
            const fs = require('fs');
            const path = '.tokens_out.json';
            if (!fs.existsSync(path)) {
              core.info('No hay tokens nuevos.');
              return;
            }
            const data = JSON.parse(fs.readFileSync(path, 'utf8'));
            for (const [acc, token] of Object.entries(data)) {
              const name = `REFRESH_TOKEN_${acc}`;
              core.info(`Actualizando variable ${name}`);
              try {
                await github.request('PATCH /repos/{owner}/{repo}/actions/variables/{name}', {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name,
                  value: token
                });
              } catch (e) {
                await github.request('POST /repos/{owner}/{repo}/actions/variables', {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  name,
                  value: token
                });
              }
            }
